Plan de Acción: Despliegue en la Nube con Render
===================================================

**Objetivo:** Transformar el proyecto para que sea compatible con un despliegue gratuito en la nube y proporcionar los pasos para que el usuario lo ponga en línea.

**Plataforma Elegida:** Render.com
**Justificación:** Es la mejor opción gratuita que combina facilidad de uso con la potencia necesaria para instalar las dependencias complejas de este proyecto (navegadores para Playwright/Selenium) a través de comandos de construcción personalizables.

--- 

### FASE 1: Transformación del Código (Tareas a realizar por Gemini)

Esta fase consiste en añadir los archivos de configuración que Render y cualquier entorno de producción estándar necesitan.

1.  **Verificar `requirements.txt`:** Asegurar que este archivo existe y contiene todas las dependencias de Python, incluyendo `gunicorn` como servidor de producción.

2.  **Verificar `Procfile`:** Asegurar que este archivo existe y le dice a Render cómo iniciar la aplicación. Debe contener la línea: `web: gunicorn app:app`.

3.  **Crear `build.sh`:** Crear un script de construcción. Es la forma más limpia de darle a Render las instrucciones de instalación. Este script se encargará de:
    a. Instalar las dependencias de Python desde `requirements.txt`.
    b. Instalar los navegadores que Playwright necesita con el comando `playwright install --with-deps`. El flag `--with-deps` es crucial para que instale las librerías de sistema necesarias en el entorno Linux de Render.

4.  **Crear `render.yaml`:** Este es el archivo más importante para facilitar el despliegue. Es un fichero de "Infraestructura como Código" que le describe a Render todo el servicio. Al leerlo, Render configurará la aplicación automáticamente sin que el usuario tenga que hacer clic en menús.
    - Definirá el tipo de servicio (`web`).
    - Apuntará al script `build.sh` para la construcción.
    - Usará el `Procfile` para el comando de inicio.

### FASE 2: Pasos de Despliegue (Tareas a realizar por el Usuario)

Una vez que Gemini complete la Fase 1, el código estará listo. El usuario solo deberá seguir estos sencillos pasos:

1.  **Subir a GitHub:** Crear un nuevo repositorio en GitHub y subir todo el contenido de la carpeta del proyecto.

2.  **Crear Cuenta en Render:** Registrarse en `render.com`, preferiblemente usando la cuenta de GitHub para una integración directa.

3.  **Desplegar desde el Blueprint:**
    a. En el panel de Render, hacer clic en **New > Blueprint**.
    b. Seleccionar el repositorio de GitHub recién creado.
    c. Render detectará y leerá automáticamente el archivo `render.yaml` y pre-configurará todo el servicio.
    d. Hacer clic en "Apply" o "Create" para iniciar el despliegue.

4.  **Finalización:** El primer despliegue tardará varios minutos debido a la descarga de los navegadores. Una vez completado, Render proporcionará una URL pública (ej. `https://tu-app.onrender.com`) donde la aplicación estará funcionando.
