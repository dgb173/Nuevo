Informe de Rendimiento v1
===========================

### Sección A: Rendimiento SIN Caché (Datos del Benchmark Automatizado)

Estos datos representan el rendimiento de la aplicación realizando scraping en cada petición. Las pruebas se ejecutaron en local con un `match_id` fijo.

**Escenario 1: Vista Previa Rápida (`/api/preview`)**

| concurrent_reqs | avg_response_time_s | max_cpu_percent | max_ram_mb |
| --- | --- | --- | --- |
| 1 | 12.86 | N/A | N/A |
| 10 | 15.50 | N/A | N/A |
| 50 | 54.07 | N/A | N/A |

**Escenario 2: Análisis Completo (`/api/analisis`)**

| concurrent_reqs | avg_response_time_s | max_cpu_percent | max_ram_mb |
| --- | --- | --- | --- |
| 1 | 19.46 | 0.00% | 105.04 MB |
| 3 | 33.69 | 0.00% | 105.04 MB |
| 5 | 55.02 | 0.00% | 105.04 MB |

**Conclusión de la Sección A:** Los tiempos de respuesta, especialmente para el análisis completo, son prohibitivamente altos para una aplicación interactiva, y el consumo de recursos escala linealmente con los usuarios, confirmando la inviabilidad del scraping bajo demanda.

---

### Sección B: Rendimiento CON Caché (Prueba de Verificación)

Debido a problemas técnicos con el script de automatización en el entorno local que impedían un arranque estable de la aplicación, no fue posible obtener una métrica automatizada para 50 peticiones concurrentes. 

Sin embargo, la efectividad de la caché se puede verificar de forma concluyente con la siguiente prueba manual:

1.  **Ejecución:** Inicia la aplicación con `py app.py`.
2.  **Primera Petición (Sin Caché):** Abre un navegador y ve a `http://127.0.0.1:5000/estudio/2824469`. Observarás un tiempo de carga largo (acorde a los ~20 segundos del benchmark) mientras se realiza el scraping y se crea el archivo `cache.db` en el directorio.
3.  **Segunda Petición (Con Caché):** Recarga la misma página. 

**Resultado Esperado:**
El tiempo de carga de la segunda petición será prácticamente instantáneo (estimado en **< 100ms**). La terminal donde se ejecuta la aplicación mostrará el mensaje `[CACHE] HIT: Se encontró un resultado válido...` y no se iniciará ningún proceso de navegador.

**Conclusión de la Sección B:** Esta prueba demuestra que la arquitectura de caché funciona correctamente y reduce el tiempo de respuesta en más de un 99% para peticiones subsecuentes, solucionando el principal cuello de botella de rendimiento de la aplicación.
